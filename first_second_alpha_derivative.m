function [ f_alpha_first,f_alpha_second ] = ...
    first_second_alpha_derivative( ldp,...
    L_beta,...
    data_label,...
    FW_beta_direction,...
    lambda_FW_alpha_0,...
    lambda_FW_alpha,...
    beta_0,...
    l_matrix,...
    n_beta)
cL_FW=0;
% ss_FW=0;
% sss_FW=0;
for i=1:n_beta
    cL_FW=cL_FW+(FW_beta_direction(i)-beta_0(i))*L_beta{i};
%     ss_FW=ss_FW-0.5*sum(sum(lambda_FW_alpha.*l_matrix(:,i),2)./sum(lambda_FW_alpha_0,2));
%     sss_FW=sss_FW+0.5*sum(sum(lambda_FW_alpha.*l_matrix(:,i),2).^2./sum(lambda_FW_alpha_0,2).^2);
end
    ss_FW=-sum(sum(lambda_FW_alpha,2)./sum(lambda_FW_alpha_0,2));
    sss_FW=sum(sum(lambda_FW_alpha,2).^2./sum(lambda_FW_alpha_0,2).^2);
f_alpha_first=trace(data_label'*cL_FW*data_label)+ldp*ss_FW;
f_alpha_second=ldp*sss_FW;
end

